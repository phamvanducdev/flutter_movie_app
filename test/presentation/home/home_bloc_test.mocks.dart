// Mocks generated by Mockito 5.4.2 from annotations
// in flutter_movie_app/test/presentation/home/home_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:flutter_movie_app/domain/entity/movie.dart' as _i6;
import 'package:flutter_movie_app/domain/entity/user_info.dart' as _i2;
import 'package:flutter_movie_app/domain/repository/auth_repository.dart'
    as _i3;
import 'package:flutter_movie_app/domain/repository/movie_repository.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserInfo_0 extends _i1.SmartFake implements _i2.UserInfo {
  _FakeUserInfo_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i3.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.UserInfo?> getUserLogged() => (super.noSuchMethod(
        Invocation.method(
          #getUserLogged,
          [],
        ),
        returnValue: _i4.Future<_i2.UserInfo?>.value(),
      ) as _i4.Future<_i2.UserInfo?>);

  @override
  _i4.Future<_i2.UserInfo> onRegister(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #onRegister,
          [
            email,
            password,
          ],
        ),
        returnValue: _i4.Future<_i2.UserInfo>.value(_FakeUserInfo_0(
          this,
          Invocation.method(
            #onRegister,
            [
              email,
              password,
            ],
          ),
        )),
      ) as _i4.Future<_i2.UserInfo>);

  @override
  _i4.Future<_i2.UserInfo> onLogin(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #onLogin,
          [
            email,
            password,
          ],
        ),
        returnValue: _i4.Future<_i2.UserInfo>.value(_FakeUserInfo_0(
          this,
          Invocation.method(
            #onLogin,
            [
              email,
              password,
            ],
          ),
        )),
      ) as _i4.Future<_i2.UserInfo>);

  @override
  _i4.Future<bool> onLogout() => (super.noSuchMethod(
        Invocation.method(
          #onLogout,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}

/// A class which mocks [MovieRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRepository extends _i1.Mock implements _i5.MovieRepository {
  MockMovieRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i6.Movie>> fetchMovieList() => (super.noSuchMethod(
        Invocation.method(
          #fetchMovieList,
          [],
        ),
        returnValue: _i4.Future<List<_i6.Movie>>.value(<_i6.Movie>[]),
      ) as _i4.Future<List<_i6.Movie>>);

  @override
  _i4.Future<bool> saveMovie(_i6.Movie? movie) => (super.noSuchMethod(
        Invocation.method(
          #saveMovie,
          [movie],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<bool> unSaveMovie(String? movieId) => (super.noSuchMethod(
        Invocation.method(
          #unSaveMovie,
          [movieId],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<bool> isSaved(String? movieId) => (super.noSuchMethod(
        Invocation.method(
          #isSaved,
          [movieId],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}
